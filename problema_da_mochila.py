# -*- coding: utf-8 -*-
"""Problema da mochila.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CeGO_oeAmfkD647ks3muE791hK8UOZZm
"""

import pulp
import streamlit as st

st.title("Calculadora de pontos Esporkids")

st.header("Escolha os produtinhos abençoados")

produtos = []
pontos = []
custos = []

orcamento = st.number_input("Orçamento disponível (em reais):", min_value=0.0, step=10.0)

qtd_produtos = st.number_input("Quantos produtos deseja adicionar?", min_value=1, step=1)
for i in range(qtd_produtos):
    st.subheader(f"Produto {i+1}")
    produto = st.text_input(f"Nome do Produto {i+1}").upper()
    if produto == "FRALDA" or produto == "FRALDAS":
        qtd_pacotes = st.number_input(f"Quantos tipos de pacotes de fralda para {produto}?", min_value=1, step=1)
        for j in range(qtd_pacotes):
            pacote_nome = f"{produto} ({j+1}º pacote)"
            qtd_fraldas = st.number_input(f"Quantas fraldas vêm no pacote {j+1}?", min_value=1, step=1, key=f"fraldas_{i}_{j}")
            custo_fralda = st.number_input(f"Custo do pacote {j+1}:", min_value=0.0, step=1.0, key=f"custo_{i}_{j}")
            produtos.append(pacote_nome)
            pontos.append(qtd_fraldas * 15)
            custos.append(custo_fralda)
    else:
        pontos_produto = st.number_input(f"Pontos do Produto {i+1}:", min_value=0, step=1, key=f"pontos_{i}")
        custo_produto = st.number_input(f"Custo do Produto {i+1}:", min_value=0.0, step=1.0, key=f"custo_{i}")
        produtos.append(produto)
        pontos.append(pontos_produto)
        custos.append(custo_produto)
if st.button("Calcular Melhor Combinação"):
    # Problema de otimização
    problema = pulp.LpProblem("Maximizar Pontos", pulp.LpMaximize)

    # Variáveis de decisão
    quantidade = pulp.LpVariable.dicts("Quantidade", produtos, lowBound=0, cat="Integer")

    # Função objetivo
    problema += pulp.lpSum([pontos[i] * quantidade[produtos[i]] for i in range(len(produtos))])

    # Restrição de orçamento
    problema += pulp.lpSum([custos[i] * quantidade[produtos[i]] for i in range(len(produtos))]) <= orcamento, "Orçamento"

    # Resolver problema
    problema.solve()

    # Exibir resultados
    st.subheader("Resultados")
    st.write(f"**Status da Solução:** {pulp.LpStatus[problema.status]}")
    if pulp.LpStatus[problema.status] == "Optimal":
        for produto in produtos:
            st.write(f"{produto}: {quantidade[produto].varValue} unidades")
        st.write(f"**Total de Pontos:** {pulp.value(problema.objective)}")
        custo_total = sum(custos[i] * quantidade[produtos[i]].varValue for i in range(len(produtos)))
        st.write(f"**Custo Total:** R$ {custo_total:.2f}")